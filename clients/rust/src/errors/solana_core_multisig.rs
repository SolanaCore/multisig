//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum SolanaCoreMultisigError {
    /// 6000 - Threshold must be greater than zero and less than or equal to number of owners
    #[error("Threshold must be greater than zero and less than or equal to number of owners")]
    InvalidThreshold = 0x1770,
    /// 6001 - The owner is not part of the multisig group
    #[error("The owner is not part of the multisig group")]
    InvalidOwner = 0x1771,
    /// 6002 - Not enough owners signed this transaction.
    #[error("Not enough owners signed this transaction.")]
    InsufficientSigners = 0x1772,
    /// 6003 - Transaction is already executed
    #[error("Transaction is already executed")]
    TransactionAlreadyExecuted = 0x1773,
    /// 6004 - Transaction details provided are invalid
    #[error("Transaction details provided are invalid")]
    InvalidTransactionDetails = 0x1774,
}

impl solana_program_error::PrintProgramError for SolanaCoreMultisigError {
    fn print<E>(&self) {
        solana_msg::msg!(&self.to_string());
    }
}

impl<T> solana_decode_error::DecodeError<T> for SolanaCoreMultisigError {
    fn type_of() -> &'static str {
        "SolanaCoreMultisigError"
    }
}


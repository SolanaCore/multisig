"use strict";
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransactionExecutedEncoder = getTransactionExecutedEncoder;
exports.getTransactionExecutedDecoder = getTransactionExecutedDecoder;
exports.getTransactionExecutedCodec = getTransactionExecutedCodec;
const kit_1 = require("@solana/kit");
const _1 = require(".");
function getTransactionExecutedEncoder() {
    return (0, kit_1.getStructEncoder)([
        ["multisig", (0, kit_1.getAddressEncoder)()],
        ["transaction", (0, kit_1.getAddressEncoder)()],
        ["programId", (0, kit_1.getAddressEncoder)()],
        ["accounts", (0, kit_1.getArrayEncoder)((0, _1.getTransactionAccountEncoder)())],
        ["data", (0, kit_1.addEncoderSizePrefix)((0, kit_1.getBytesEncoder)(), (0, kit_1.getU32Encoder)())],
        ["signers", (0, kit_1.getArrayEncoder)((0, kit_1.getBooleanEncoder)())],
    ]);
}
function getTransactionExecutedDecoder() {
    return (0, kit_1.getStructDecoder)([
        ["multisig", (0, kit_1.getAddressDecoder)()],
        ["transaction", (0, kit_1.getAddressDecoder)()],
        ["programId", (0, kit_1.getAddressDecoder)()],
        ["accounts", (0, kit_1.getArrayDecoder)((0, _1.getTransactionAccountDecoder)())],
        ["data", (0, kit_1.addDecoderSizePrefix)((0, kit_1.getBytesDecoder)(), (0, kit_1.getU32Decoder)())],
        ["signers", (0, kit_1.getArrayDecoder)((0, kit_1.getBooleanDecoder)())],
    ]);
}
function getTransactionExecutedCodec() {
    return (0, kit_1.combineCodec)(getTransactionExecutedEncoder(), getTransactionExecutedDecoder());
}

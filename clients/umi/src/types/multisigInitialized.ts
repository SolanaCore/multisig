/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  array,
  publicKey as publicKeySerializer,
  struct,
  u64,
  u8,
} from '@metaplex-foundation/umi/serializers';

export type MultisigInitialized = {
  multisig: PublicKey;
  owners: Array<PublicKey>;
  threshold: bigint;
  bump: number;
};

export type MultisigInitializedArgs = {
  multisig: PublicKey;
  owners: Array<PublicKey>;
  threshold: number | bigint;
  bump: number;
};

export function getMultisigInitializedSerializer(): Serializer<
  MultisigInitializedArgs,
  MultisigInitialized
> {
  return struct<MultisigInitialized>(
    [
      ['multisig', publicKeySerializer()],
      ['owners', array(publicKeySerializer())],
      ['threshold', u64()],
      ['bump', u8()],
    ],
    { description: 'MultisigInitialized' }
  ) as Serializer<MultisigInitializedArgs, MultisigInitialized>;
}
